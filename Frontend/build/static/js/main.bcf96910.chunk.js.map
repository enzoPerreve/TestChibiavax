{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/1.png","assets/images/20.png","assets/images/25.png","assets/images/36.png","assets/images/90.png","assets/images/89.png","assets/images/94.png","assets/images/135.png","assets/images/227.png","assets/images/310.png","assets/images/3975.png","assets/images/3976.png","assets/images/3978.png","assets/images/3980.png","assets/images/4026.png","assets/images/ChibavaxFond.png","assets/images/Chibavax.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledImg","img","LogoImg","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","useEffect","style","backgroundColor","alt","src","Fond","textAlign","onClick","e","preventDefault","window","ethereum","isMetaMask","Web3","request","method","accounts","networkId","SmartContract","networks","NetworkData","SmartContractObj","eth","Contract","abi","address","on","location","reload","minHeight","fontSize","fontWeight","flexWrap","overflow","maxHeight","i1","i2","i3","i4","i6","i7","i8","i9","i10","i11","i12","i13","i14","i15","i16","Number","target","href","disabled","_amount","mint","send","gasLimit","to","from","value","utils","toWei","toString","once","err","then","receipt","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcf96910.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        name: action.payload.name,\r\n        totalSupply: action.payload.totalSupply,\r\n        cost: action.payload.cost,\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      let cost = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.cost()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n          totalSupply,\r\n          cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/Bull.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        const NetworkData = await SmartContract.networks[networkId];\r\n        // if (networkId == 1) {\r\n        if (NetworkData) {\r\n          const SmartContractObj = new web3.eth.Contract(\r\n            SmartContract.abi,\r\n            NetworkData.address\r\n            // \"0x6020371b0e8a2fc259a6b111d178bba9c966a4a4\"\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--dark-grey);\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--dark-grey);\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--dark-grey);\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/1.9f126fde.png\";","export default __webpack_public_path__ + \"static/media/20.41a7123a.png\";","export default __webpack_public_path__ + \"static/media/25.1bb931f3.png\";","export default __webpack_public_path__ + \"static/media/36.a6790ba9.png\";","export default __webpack_public_path__ + \"static/media/90.5e12cf8a.png\";","export default __webpack_public_path__ + \"static/media/89.ad99e8bf.png\";","export default __webpack_public_path__ + \"static/media/94.8bcc05be.png\";","export default __webpack_public_path__ + \"static/media/135.3326df18.png\";","export default __webpack_public_path__ + \"static/media/227.4391631c.png\";","export default __webpack_public_path__ + \"static/media/310.941c3471.png\";","export default __webpack_public_path__ + \"static/media/3975.d9bc2738.png\";","export default __webpack_public_path__ + \"static/media/3976.d5b32881.png\";","export default __webpack_public_path__ + \"static/media/3978.386bb1dc.png\";","export default __webpack_public_path__ + \"static/media/3980.2ab1ea8c.png\";","export default __webpack_public_path__ + \"static/media/4026.ba199012.png\";","export default __webpack_public_path__ + \"static/media/ChibavaxFond.da08905e.png\";","export default __webpack_public_path__ + \"static/media/Chibavax.54c45ca5.png\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/1.png\";\r\nimport i2 from \"./assets/images/20.png\";\r\nimport i3 from \"./assets/images/25.png\";\r\nimport i4 from \"./assets/images/36.png\";\r\nimport i6 from \"./assets/images/90.png\";\r\nimport i7 from \"./assets/images/89.png\";\r\nimport i8 from \"./assets/images/94.png\";\r\nimport i9 from \"./assets/images/135.png\";\r\nimport i10 from \"./assets/images/227.png\";\r\nimport i11 from \"./assets/images/310.png\";\r\nimport i12 from \"./assets/images/3975.png\";\r\nimport i13 from \"./assets/images/3976.png\";\r\nimport i14 from \"./assets/images/3978.png\";\r\nimport i15 from \"./assets/images/3980.png\";\r\nimport i16 from \"./assets/images/4026.png\";\r\nimport icon from \"./assets/images/AvalancheLogo.png.png\";\r\nimport Fond from \"./assets/images/ChibavaxFond.png\";\r\nimport Chibavax from \"./assets/images/Chibavax.png\";\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 8px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: #1e9abd;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #fff;\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"Maybe it's your lucky day.\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n\r\n  const claimNFTs = (_amount) => {\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Minting your Chibivax...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      .send({\r\n        gasLimit: \"285000\",\r\n        to: \"0x6020371b0e8a2fc259a6b111d178bba9c966a4a4\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei(\r\n          ((Number(data.cost) / 1e18) * _amount).toString(),\r\n          \"ether\"\r\n        ),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"WOW, you now own a LunaLander. go visit Opensea.io to view it.\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  }, [blockchain.account, blockchain.smartContract, dispatch]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--red)\" }}>\r\n      {blockchain.account === \"\" || blockchain.smartContract === null ? (\r\n        <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\r\n          <LogoImg alt={\"logo\"} src={Fond} />\r\n          <s.SpacerSmall />\r\n          <s.TextTitle style={{ textAlign: \"center\" }}>\r\n            To Mint a Chibavax\r\n          </s.TextTitle>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription style={{ textAlign: \"center\" }}>\r\n            Connect to the Avalanche network\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <StyledButton\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              dispatch(connect());\r\n            }}\r\n          >\r\n            CONNECT\r\n          </StyledButton>\r\n          <s.SpacerSmall />\r\n          {blockchain.errorMsg !== \"\" ? (\r\n            <s.TextDescription style={{ textAlign: \"center\" }}>\r\n              {blockchain.errorMsg}\r\n            </s.TextDescription>\r\n          ) : null}\r\n        </s.Container>\r\n      ) : (\r\n        <s.Container flex={1}>\r\n          <s.Container style={{ minHeight: 80 }} jc={\"center\"} ai={\"center\"}>\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 28, fontWeight: \"bold\" }}\r\n            >\r\n              Mint a Chibavax\r\n            </s.TextTitle>\r\n          </s.Container>\r\n          <s.Container\r\n            ai={\"center\"}\r\n            jc={\"center\"}\r\n            fd={\"row\"}\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              overflow: \"hidden\",\r\n              maxHeight: \"200px\",\r\n              minHeight: \"200px\",\r\n            }}\r\n          >\r\n            <StyledImg alt={\"example\"} src={i1} />\r\n            <StyledImg alt={\"example\"} src={i2} />\r\n            <StyledImg alt={\"example\"} src={i3} />\r\n            <StyledImg alt={\"example\"} src={i4} />\r\n            <StyledImg alt={\"example\"} src={i6} />\r\n            <StyledImg alt={\"example\"} src={i7} />\r\n            <StyledImg alt={\"example\"} src={i8} />\r\n            <StyledImg alt={\"example\"} src={i9} />\r\n            <StyledImg alt={\"example\"} src={i10} />\r\n            <StyledImg alt={\"example\"} src={i11} />\r\n            <StyledImg alt={\"example\"} src={i12} />\r\n            <StyledImg alt={\"example\"} src={i13} />\r\n            <StyledImg alt={\"example\"} src={i14} />\r\n            <StyledImg alt={\"example\"} src={i15} />\r\n            <StyledImg alt={\"example\"} src={i16} />\r\n          </s.Container>\r\n          <s.SpacerSmall />\r\n          <s.Container flex={1} ai={\"center\"} jc={\"center\"}>\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 35, fontWeight: \"bold\" }}\r\n            >\r\n              {data.totalSupply}/10000\r\n            </s.TextTitle>\r\n            <s.SpacerMedium />\r\n\r\n            {Number(data.totalSupply) == 10000 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.SpacerSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  You can still find LunaLanders on{\" \"}\r\n                  <a\r\n                    target={\"_blank\"}\r\n                    href={\"https://opensea.io/collection/lunalanders\"}\r\n                  >\r\n                    Opensea.io\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  1 Chibavax costs {data.cost / 1e18} ETH.\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Excluding gas fee.\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                <s.SpacerMedium />\r\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                  <StyledButton\r\n                    disabled={claimingNft ? 1 : 0}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      claimNFTs(1);\r\n                    }}\r\n                  >\r\n                    {claimingNft ? \"BUSY\" : \"BUY 1\"}\r\n                  </StyledButton>\r\n                </s.Container>\r\n                <s.SpacerLarge />\r\n                <s.SpacerLarge />\r\n                <s.Container\r\n                  jc={\"center\"}\r\n                  ai={\"center\"}\r\n                  style={{ width: \"70%\" }}\r\n                >\r\n                  <s.TextDescription\r\n                    style={{ textAlign: \"center\", fontSize: 9 }}\r\n                  >\r\n                    Please make sure you are connected to the right network\r\n                    (Avalanche Mainnet) and the correct address. Please note:\r\n                    Once you make the purchase, you cannot undo this action.\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <s.TextDescription\r\n                    style={{ textAlign: \"center\", fontSize: 9 }}\r\n                  >\r\n                    We have set the gas limit to 285000 for the contract to\r\n                    successfully mint your NFT. We recommend that you don't\r\n                    change the gas limit.\r\n                  </s.TextDescription>\r\n                </s.Container>\r\n                <s.SpacerSmall />\r\n              </>\r\n            )}\r\n          </s.Container>\r\n        </s.Container>\r\n      )}\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}